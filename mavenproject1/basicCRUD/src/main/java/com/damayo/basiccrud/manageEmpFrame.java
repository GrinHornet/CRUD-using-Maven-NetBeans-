/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.damayo.basiccrud;

import java.util.*;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.*;

public class manageEmpFrame extends javax.swing.JInternalFrame {

    /**
     * Creates new form search
     */
    public manageEmpFrame() {
        initComponents();
        displayToTable();
    }
   public void displayToTable() {
    DefaultTableModel model = (DefaultTableModel) empTable.getModel();
    
    try {
        model.setRowCount(0);
        String query = "SELECT * FROM employee WHERE status = 1";
        ResultSet resultSet = DatabaseUtil.executeQuery(query);

        while (resultSet.next()) {
            String empId = resultSet.getString("id");
            String fullName = resultSet.getString("fname") + " " + resultSet.getString("lname");
            String type = resultSet.getString("usertype");
            String gender = resultSet.getString("gender");
            String contact = resultSet.getString("contact");
            String address = resultSet.getString("address");
            
            model.addRow(new Object[]{empId, fullName, type, gender, contact, address});
        }
    } catch (SQLException ex) {
        Logger.getLogger(manageEmpFrame.class.getName()).log(Level.SEVERE, null, ex);
    }
}
public void getEmpTableRecord() {
    int selectedRow = empTable.getSelectedRow();

    if (selectedRow != -1) { // Ensure a row is selected
    DefaultTableModel model = (DefaultTableModel) empTable.getModel();

    // Retrieve data from the selected row
    String empId = model.getValueAt(selectedRow, 0).toString();

    // Query the database using empId to get the details
        String query = "SELECT * FROM employeeoop.employee WHERE id = ?";
        System.out.println("Selected EmpId: " + empId);
        try {
            // Use a prepared statement to avoid SQL injection
            Connection connection = DatabaseUtil.getConnection();
            PreparedStatement preparedStatement = connection.prepareStatement(query);
            preparedStatement.setString(1, empId);

            ResultSet resultSet = preparedStatement.executeQuery();

            if (resultSet.next()) {
                // Your existing code to retrieve and set values
                String fName = resultSet.getString("fname"); 
                String mName = resultSet.getString("mnane");
                String lName = resultSet.getString("lname");
                String type1 = resultSet.getString("usertype");
                String gender1 = resultSet.getString("gender");
                String contact1 = resultSet.getString("contact");
                String address1 = resultSet.getString("address");

                // Set values to text fields and comboBoxes
                fname.setText(fName);
                mname.setText(mName);
                lname.setText(lName);
                type.setSelectedItem(type1);
                gender.setSelectedItem(gender1);
                contact.setText(contact1);
                address.setText(address1);
            }
        } catch (SQLException ex) {
            Logger.getLogger(manageEmpFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        searchField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        empTable = new javax.swing.JTable();
        mname = new javax.swing.JTextField();
        lname = new javax.swing.JTextField();
        contact = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        fname = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        address = new javax.swing.JTextField();
        clearBtn = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        updateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        type = new javax.swing.JComboBox<>();
        gender = new javax.swing.JComboBox<>();

        setClosable(true);
        setIconifiable(true);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        searchField.setBackground(new java.awt.Color(255, 255, 255));
        searchField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        searchField.setForeground(new java.awt.Color(0, 0, 0));
        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });
        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchFieldKeyReleased(evt);
            }
        });
        jPanel1.add(searchField, new org.netbeans.lib.awtextra.AbsoluteConstraints(127, 50, 290, 30));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Search Employee :");
        jLabel1.setVerifyInputWhenFocusTarget(false);
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 53, 120, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("MANAGE EMPLOYEE RECORD");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 0, 360, 44));

        empTable.setBackground(new java.awt.Color(255, 255, 255));
        empTable.setForeground(new java.awt.Color(0, 0, 0));
        empTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Full Name", "Type", "Gender", "Contact", "Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        empTable.setGridColor(new java.awt.Color(51, 51, 51));
        empTable.setShowGrid(true);
        empTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                empTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(empTable);
        if (empTable.getColumnModel().getColumnCount() > 0) {
            empTable.getColumnModel().getColumn(0).setMinWidth(30);
            empTable.getColumnModel().getColumn(0).setMaxWidth(30);
            empTable.getColumnModel().getColumn(1).setMinWidth(120);
            empTable.getColumnModel().getColumn(1).setMaxWidth(120);
            empTable.getColumnModel().getColumn(2).setMinWidth(50);
            empTable.getColumnModel().getColumn(2).setMaxWidth(50);
            empTable.getColumnModel().getColumn(3).setMinWidth(50);
            empTable.getColumnModel().getColumn(3).setMaxWidth(50);
            empTable.getColumnModel().getColumn(4).setMinWidth(60);
            empTable.getColumnModel().getColumn(4).setMaxWidth(60);
            empTable.getColumnModel().getColumn(5).setMinWidth(105);
            empTable.getColumnModel().getColumn(5).setMaxWidth(105);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 410, 390));

        mname.setBackground(new java.awt.Color(255, 255, 255));
        mname.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(mname, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 70, 226, 40));

        lname.setBackground(new java.awt.Color(255, 255, 255));
        lname.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(lname, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 130, 226, 40));

        contact.setBackground(new java.awt.Color(255, 255, 255));
        contact.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        contact.setForeground(new java.awt.Color(0, 0, 0));
        contact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contactActionPerformed(evt);
            }
        });
        jPanel1.add(contact, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 190, 226, 40));

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("First Name");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 20, -1, -1));

        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Surname");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 150, -1, -1));

        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Contacct # ");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 210, -1, -1));

        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Type");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 260, -1, -1));

        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Gender");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 320, -1, -1));

        fname.setBackground(new java.awt.Color(255, 255, 255));
        fname.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        fname.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(fname, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 10, 226, 40));

        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Address:");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 355, 50, -1));

        address.setBackground(new java.awt.Color(255, 255, 255));
        address.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(address, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 380, 310, 40));

        clearBtn.setBackground(new java.awt.Color(204, 102, 0));
        clearBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        clearBtn.setForeground(new java.awt.Color(255, 255, 255));
        clearBtn.setText("CLEAR");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });
        jPanel1.add(clearBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 440, 90, 40));

        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("Middle Name");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 80, -1, -1));

        updateBtn.setBackground(new java.awt.Color(0, 204, 102));
        updateBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        updateBtn.setForeground(new java.awt.Color(255, 255, 255));
        updateBtn.setText("UPDATE");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        jPanel1.add(updateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 440, 90, 40));

        deleteBtn.setBackground(new java.awt.Color(204, 51, 0));
        deleteBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteBtn.setText("DELETE");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        jPanel1.add(deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 440, 90, 40));

        type.setBackground(new java.awt.Color(0, 153, 255));
        type.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        type.setForeground(new java.awt.Color(255, 255, 255));
        type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Employee", "Admin" }));
        type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeActionPerformed(evt);
            }
        });
        jPanel1.add(type, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 250, 130, 40));

        gender.setBackground(new java.awt.Color(0, 153, 255));
        gender.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        gender.setForeground(new java.awt.Color(255, 255, 255));
        gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        jPanel1.add(gender, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 310, 130, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 762, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFieldActionPerformed

    private void empTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_empTableMouseClicked
    getEmpTableRecord();
    }//GEN-LAST:event_empTableMouseClicked

    private void searchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyReleased
  
    DefaultTableModel model = (DefaultTableModel) empTable.getModel();
    
    try {
        model.setRowCount(0);
        String query = "SELECT * FROM employee WHERE status =1";
        ResultSet resultSet = DatabaseUtil.executeQuery(query);

        while (resultSet.next()) {
            String empId = resultSet.getString("id");
            String fullName = resultSet.getString("fname") + " " + resultSet.getString("lname");
            String type = resultSet.getString("usertype");
            String gender = resultSet.getString("gender");
            String contact = resultSet.getString("contact");
            String address = resultSet.getString("address");
            
            if(fullName.toLowerCase().contains(searchField.getText().toLowerCase())){
                model.addRow(new Object[]{empId, fullName, type, gender, contact, address});
            }
        }
    } catch (SQLException ex) {
        Logger.getLogger(manageEmpFrame.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_searchFieldKeyReleased

    private void contactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contactActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        fname.setText("");
        mname.setText("");
        address.setText("");
        lname.setText("");
        gender.setSelectedItem("Male");
        type.setSelectedItem("Employee");
        contact.setText("");
        searchField.setText("");
    }//GEN-LAST:event_clearBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        
        int confirmation = JOptionPane.showConfirmDialog(this, "Are you sure you want to perform this action?", "Confirmation", JOptionPane.YES_NO_OPTION);
        int selectedRow = empTable.getSelectedRow();
        if (selectedRow != -1) { // Ensure a row is selected
         DefaultTableModel model = (DefaultTableModel) empTable.getModel();

    // Retrieve data from the selected row
        String empId = model.getValueAt(selectedRow, 0).toString();
        Connection connection = null;
        PreparedStatement preparedStatement = null;
if (confirmation == JOptionPane.YES_OPTION) {
    // User clicked 'Yes' for confirmation
    try {
       

        // Assuming 'id' is the primary key of your table and is used to identify the record to update
        String query = "UPDATE `employee` SET `fname`=?, `mnane`=?, `lname`=?, `usertype`=?, `gender`=?, "
                + "`contact`=?, `address`=? WHERE `id`=?";
        connection = DatabaseUtil.getConnection();
        
            if(fname.getText().isEmpty() ||mname.getText().isEmpty()
                        ||lname.getText().isEmpty() ||contact.getText().isEmpty()
                        ||address.getText().isEmpty()){
                    JOptionPane.showMessageDialog(this, "Please fillout important fields.");
            }else{
                preparedStatement = connection.prepareStatement(query);
                preparedStatement.setString(1, fname.getText());
                preparedStatement.setString(2, mname.getText());
                preparedStatement.setString(3, lname.getText());
                preparedStatement.setString(4, type.getSelectedItem().toString());
                preparedStatement.setString(5, gender.getSelectedItem().toString());
                preparedStatement.setString(6, contact.getText());
                preparedStatement.setString(7, address.getText());
                preparedStatement.setString(8, empId); 
            }
        int rowsAffected = preparedStatement.executeUpdate();

        if (rowsAffected > 0) {
            // Data updated successfully
            JOptionPane.showMessageDialog(this, "Action performed successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
            displayToTable();
            fname.setText("");
            mname.setText("");
            address.setText("");
            lname.setText("");
            gender.setSelectedItem("Male");
            type.setSelectedItem("Employee");
            contact.setText("");
            searchField.setText("");
        } else {
            // No rows affected, update failed
            JOptionPane.showMessageDialog(this, "Failed to perform action", "Failure", JOptionPane.ERROR_MESSAGE);
        }
    } catch (SQLException e) {
        e.printStackTrace();
        } finally {
            // Close resources in the reverse order of their creation
            try {
                if (preparedStatement != null) {
                    preparedStatement.close();
                }
                if (connection != null) {
                    connection.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
} else {
    // User clicked 'No' for confirmation
    JOptionPane.showMessageDialog(this, "Action cancelled", "Cancelled", JOptionPane.INFORMATION_MESSAGE);
}

        
        
    }//GEN-LAST:event_updateBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
         int selectedRow = empTable.getSelectedRow();

if (selectedRow != -1) { // Ensure a row is selected
    DefaultTableModel model = (DefaultTableModel) empTable.getModel();

    // Retrieve data from the selected row
    String empId = model.getValueAt(selectedRow, 0).toString();
    
    // Confirmation dialog
    int confirmation = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this record?", "Confirmation", JOptionPane.YES_NO_OPTION);

    if (confirmation == JOptionPane.YES_OPTION) {
        Connection connection = null;
        PreparedStatement preparedStatement = null;

        try {
            // Assuming 'id' is the primary key of your table and is used to identify the record to update
            String query = "UPDATE `employee` SET `status`=? WHERE `id`=?";
            connection = DatabaseUtil.getConnection();

            preparedStatement = connection.prepareStatement(query);
            preparedStatement.setString(1, "0");
            preparedStatement.setString(2, empId);

            int rowsAffected = preparedStatement.executeUpdate();

            if (rowsAffected > 0) {
                // Data updated successfully
                JOptionPane.showMessageDialog(this, "Data Deleted successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
                displayToTable();
                fname.setText("");
                mname.setText("");
                address.setText("");
                lname.setText("");
                gender.setSelectedItem("Male");
                type.setSelectedItem("Employee");
                contact.setText("");
                searchField.setText("");
            } else {
                // No rows affected, update failed
                JOptionPane.showMessageDialog(this, "Failed to update data", "Failure", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            // Close resources in the reverse order of their creation
            try {
                if (preparedStatement != null) {
                    preparedStatement.close();
                }
                if (connection != null) {
                    connection.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
}

    }//GEN-LAST:event_deleteBtnActionPerformed

    private void typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_typeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField address;
    private javax.swing.JButton clearBtn;
    private javax.swing.JTextField contact;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTable empTable;
    private javax.swing.JTextField fname;
    private javax.swing.JComboBox<String> gender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lname;
    private javax.swing.JTextField mname;
    private javax.swing.JTextField searchField;
    private javax.swing.JComboBox<String> type;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
